#
# build.properties file :
# contains some properties to be defined to run sql initialisation scripts
#
#

#Webapp database pool configuration file path
#Default value when script in webapp sql directory
#db.properties.path= ../conf/db.properties

#Database connector driver jar path
#Default value when script in webapp sql directory
#db.connector.jar.path=../lib/mysql-connector-java-5.0.5.jar

#Comportment on sql errors
#Possible values : continue, stop, abort
on_sql_error=continue
db.encoding=utf-8

#Set path of some JDBC connectors
hsqldb.connector.jar.path=../lib/hsqldb-1.8.0.10.jar
mysql.connector.jar.path=../lib/mysql-connector-java-5.1.18.jar
oracle.connector.jar.path=../lib/ojdbc14-10.2.0.3.0.jar
postgresql.connector.jar.path=../lib/postgresql-9.0-801.jdbc4.jar

#Replacement rules for specific DBMS
# Format is :
# regexp.${dbms}.list : list of index for each replacement rule, separated by comma
#                       This list must at least be empty.
# regexp.${dbms}.${index} : the pattern to be replaced
# replace.${dbms}.${index} : the replacement to apply when matching regexp.${dbms}.${index}
regexp.hsqldb.list=1,2,3,4,5,6,7
regexp.hsqldb.1=LONG VARBINARY
regexp.hsqldb.2=LONG VARCHAR
regexp.hsqldb.3=([,(])0x([0-9A-F]+)
regexp.hsqldb.4=default '0000-00-00' NOT NULL
regexp.hsqldb.5=default '0000-00-00 00:00:00' NOT NULL
regexp.hsqldb.6=default\\s+NOW\\(\\s*\\)
regexp.hsqldb.7=\\\\'
replace.hsqldb.1=LONGVARBINARY
replace.hsqldb.2=LONGVARCHAR
replace.hsqldb.3=\\1'\\2'
replace.hsqldb.4=
replace.hsqldb.5=
replace.hsqldb.6=DEFAULT 'now'
replace.hsqldb.7=''

regexp.mysql.list=

# Replacement rules for Oracle
regexp.oracle.list=1,2,3,4,5,6
regexp.oracle.1=default '0000-00-00' NOT NULL
replace.oracle.1=
regexp.oracle.2=LONG VARBINARY
replace.oracle.2=BLOB
# for DROP TABLE statements
regexp.oracle.3= IF EXISTS (.*)
replace.oracle.3= \\1
regexp.oracle.4=default '0000-00-00 00:00:00' NOT NULL
replace.oracle.4=
# for BLOB import
regexp.oracle.5=([,(])0x([0-9A-F]+)
replace.oracle.5=\\1'\\2'
regexp.oracle.6=LONG VARCHAR
replace.oracle.6=CLOB

# Replacement rules for PostgreSQL
regexp.postgresql.list=1,2,3,4,5,6,7,8
regexp.postgresql.1=default '0000-00-00' NOT NULL
replace.postgresql.1=
regexp.postgresql.2=default '0000-00-00 00:00:00' NOT NULL
replace.postgresql.2=
regexp.postgresql.3=LONG VARBINARY
replace.postgresql.3=bytea
regexp.postgresql.4=LONG VARCHAR
replace.postgresql.4=TEXT
regexp.postgresql.5=([,(])0x([0-9A-F ]+)
replace.postgresql.5=\\1decode('\\2', 'hex')
regexp.postgresql.6=([,(]) 0x([0-9A-F ]+)
replace.postgresql.6=\\1decode('\\2', 'hex')
regexp.postgresql.7=([source =]) 0x([0-9A-F ]+)
replace.postgresql.7=\\1decode('\\1', 'hex')
regexp.postgresql.8=/\\*E\\*/('.*')
replace.postgresql.8=E\\1
