function setCookie(cname, cvalue, exdays) {
  var d = new Date();
  d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);
  var expires = "expires=" + d.toGMTString();
  document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
}

function getCookie(cname) {
  var name = cname + "=";
  var decodedCookie = decodeURIComponent(document.cookie);
  var ca = decodedCookie.split(";");
  for (var i = 0; i < ca.length; i++) {
    var c = ca[i];
    while (c.charAt(0) == " ") {
      c = c.substring(1);
    }
    if (c.indexOf(name) == 0) {
      return c.substring(name.length, c.length);
    }
  }
  return "";
}

function checkCookie(cookieName) {
  var c = getCookie(cookieName);
  if (c != "") {
    return true;
  } else {
    return false;
  }
}

function tableXsCollapse() {
  if (window.innerWidth < 580) {
    document.querySelectorAll(".xs-collapsed td:first-child").forEach(function (cell) {
      cell.addEventListener("click", function () {
        let siblings = Array.from(cell.parentNode.children).slice(1);
        siblings.forEach(function (sibling) {
          sibling.classList.toggle("d-block");
        });
        cell.classList.toggle("open");
      });
    });
  }
}
 
function addNoOpener(link) {
  let linkTypes = (link.getAttribute("rel") || "").split(" ");
  if (!linkTypes.includes("noopener")) {
    linkTypes.push("noopener");
  }
  link.setAttribute("rel", linkTypes.join(" ").trim());
}

function addNewTabMessage(link) {
  if (!link.querySelector(".screen-reader-only")) {
    link.insertAdjacentHTML( 'beforeend', '<span class="screen-reader-only">(opens in a new tab)</span>' );
  }
}

function setCharCounter(selCounters) {
  let counters = selCounters === null || selCounters === undefined ? ".counter" : selCounters;
  document.querySelectorAll(counters).forEach(function (counterElement) {
    let nCounterMax = counterElement.getAttribute("maxlength");
    if (!isNaN(nCounterMax) && nCounterMax > 0) {
      let tag = `<span class="ms-2 counter-number text-dark fw-bold">0 /</span><small class="text-dark"> ${nCounterMax} caractères maximum</small>`;
      counterElement.parentElement.querySelector("label").insertAdjacentHTML('beforeend', tag);
      let counter = counterElement.parentElement.querySelector(".counter-number"),
        nChars = 0;

      counterElement.addEventListener("keyup", function () {
        nChars = counterElement.value.length;
        counter.innerHTML = nChars + " /";
        if (nChars >= nCounterMax) {
          counterElement.insertAdjacentHTML('afterend', '<p role="alert" class="visually-hidden">Vous avez atteint le nombre de caractères maximum</p>');
          return false;
        }
      });

      counterElement.addEventListener("paste", function (event) {
        event.preventDefault();
        const content = counterElement.value;
        counterElement.value = "";
        let clip = event.clipboardData.getData("Text");
        let final_clip = content + clip.replace(/\s+/g, " ");
        if (final_clip.length > nCounterMax) {
          final_clip = final_clip.substring(0, nCounterMax);
        }
        counterElement.value = final_clip;
        nChars = counterElement.value.length;
        counter.innerHTML = nChars + " /";
        if (nChars >= nCounterMax) {
          counterElement.insertAdjacentHTML('afterend', '<p role="alert" class="visually-hidden">Vous avez atteint le nombre de caractères maximum</p>');
          return false;
        }
      });
    } else {
      counterElement.parentElement.querySelector("label").insertAdjacentHTML('afterend', "<!-- WARNING no max-length attribute on the input below = no counter shown -->");
    }
  });
}

document.addEventListener("DOMContentLoaded", function () {
  /* Set skip links url */
  var loc = window.location.href;
  document.querySelectorAll(".skip-links li a").forEach(function (link) {
    const currentHref = loc + link.getAttribute("href");
    link.setAttribute("href", currentHref);
  });

  /* Banner Height */
  var loc = window.location.search;
  var isHome = loc.match(/(?:(?:page=)|(?:page_id=)([1|2|3|4|5|6|7|8|9]([\d])))+/g);
  if (isHome != null) {
    if(  document.querySelector(".banner") != null ) {
      document.querySelector(".banner").classList.add("internal");
    }
  }

  /* Prevent Click on disabled features */
  document.querySelectorAll(".disabled").forEach(function (element) {
    element.addEventListener("click", function (e) {
      e.preventDefault();
    });
  });

  /* Error Scroll                           */
  // Add smooth scrolling to all links
  const firstInvalidElement = document.querySelector('.is-invalid');
  if (firstInvalidElement) {
      firstInvalidElement.scrollIntoView({ behavior: 'smooth', block: 'center' });
  }

  /* Theme FORM controls */
  /* Form Label color change on focus / focusout */
  document.querySelectorAll("label + .form-control").forEach(function (element) {
    element.addEventListener("focus", function () {
      element.previousElementSibling.classList.add("main-info-color");
    });
    element.addEventListener("focusout", function () {
      element.previousElementSibling.classList.remove("main-info-color");
    });
  });

  document.querySelectorAll("label + .input-group .form-control").forEach(function (element) {
    element.addEventListener("focus", function () {
      element.closest(".input-group").previousElementSibling.classList.add("main-info-color");
    });
    element.addEventListener("focusout", function () {
      element.closest(".input-group").previousElementSibling.classList.remove("main-info-color");
    });
  });

  /* Main Sidebar Toggler  */
  const btnSidebarCollapse = document.querySelector("#main-sidebar-collapse"), layoutSidebar = document.querySelector('#layout-sidebar-wrapper');
  if (btnSidebarCollapse != null) {
    if (localStorage.getItem('main-sidebar-collapse') === 'true') {
      layoutSidebar.classList.add('collapsed');
      btnSidebarCollapse.setAttribute('aria-expanded', 'false');
    }
    btnSidebarCollapse.addEventListener('click', function() {
      const isCollapsed = layoutSidebar.classList.toggle('collapsed');
      btnSidebarCollapse.setAttribute('aria-expanded', isCollapsed ? 'false' : 'true');
      isCollapsed ? localStorage.setItem('main-sidebar-collapse', 'true') : localStorage.removeItem('main-sidebar-collapse');
    });
  }

  /* Sidebar Toggle deactivated */
  document.querySelectorAll('#sidebar-main-menu .nav-link.dropdown-toggle').forEach(function (element) {
      element.removeAttribute( 'data-bs-toggle' )
  });

  /* Details Summary Toggle */
  document.querySelectorAll('.cascading').forEach( function( cascading ) {
    cascading.addEventListener( 'click', function(e) {
      e.currentTarget.getAttribute('open') == null ? e.currentTarget.setAttribute('aria-expanded','true') : e.currentTarget.setAttribute('aria-expanded', 'false');
    });
  });

  /* Details Summary Toggle */
  document.querySelectorAll('.dismissible').forEach( function( dismissible ) {
    dismissible.addEventListener( 'click', function(e) {
      const firstParagraph = e.currentTarget.querySelector('p:first-child');
      if (firstParagraph) {
        firstParagraph.classList.toggle('d-none');
      }
    });
  });

  // Accordion button toggler with message
  function setTogglerLabel(toggler, comparator = 'true') {
    if (toggler.getAttribute('aria-expanded').toLowerCase() === comparator) {
      if( toggler.querySelector('.btn-label-accordion') != null ) {
        toggler.querySelector('.btn-label-accordion').textContent = toggler.dataset.showLabel;
      } 
    } else {
      if( toggler.querySelector('.btn-label-accordion') != null ) {
        toggler.querySelector('.btn-label-accordion').textContent = toggler.dataset.hideLabel;
      }
    }
  }

  const cardAlerts = document.querySelectorAll('.card.alert .card-header .btn-header-accordion');
  if (cardAlerts.length > 0) {
    const accordionHeadersToggler = Array.from(cardAlerts);
    accordionHeadersToggler.forEach(acc => {
      setTogglerLabel( acc, 'false');
      acc.addEventListener('click', (e) => {
        setTogglerLabel( acc, 'true');
      });
    });
  }

  // Prevent Double Submits
  var form = document.querySelector("form");
  if (form != null) {
    form.addEventListener("submit", function () {
      document.querySelectorAll('.form-control:user-invalid').forEach(function (element) {
        element.classList.add('is-invalid');
      });
      document.querySelectorAll('.form-control:invalid').forEach(function (element) {
        element.classList.add('is-invalid');
      });
      var buttons = form.querySelectorAll('input[type="submit"]');
      buttons.forEach(function (button) {
        button.setAttribute("disabled", "disabled");
      });
    }, false);
    setCharCounter();
  }
  
  // Manage multiselect 
  document.querySelectorAll('.multiselect').forEach( function( multiItem ){
    const maxOpt = parseInt( multiItem.dataset.maxoptions );
    const multiCheckbox = multiItem.querySelectorAll( '.dropdown-menu input[type="checkbox"]' );
    multiCheckbox.forEach( function( itemCheckbox ) {
      itemCheckbox.addEventListener( 'change', function () {
        updateTags( itemCheckbox );
        updateSelected( itemCheckbox );
        const multiCheckboxChecked = multiItem.querySelectorAll( '.dropdown-menu input[type="checkbox"]:checked' ).length;
        if( maxOpt > 0 && multiCheckboxChecked >= maxOpt ) {
          setErrorMsg( itemCheckbox  )
        }
      });
  });
  });

  function updateTags( checkedBox ){
    const tagsContainer = checkedBox.closest('.multiselect').querySelector('.tags-container');
    const tag = document.createElement('button');
    tag.classList.add('btn', 'tag');
    tag.textContent = checkedBox.nextElementSibling.textContent;
    const removeTag = document.createElement('span');
    removeTag.className = 'btn-close btn-close-white';
    tag.onclick = function(){
        const errorElem = checkedBox.closest('.multiselect').querySelector('.tags-container + .is-invalid' );
        if( errorElem ) {
          resetErrorMsg( checkedBox )
        }
        this.remove();
        updateSelected( checkedBox );
    };
    tag.appendChild( removeTag );
    tagsContainer.appendChild(tag);
}

  function updateSelected( checkedBox ){
  const li = checkedBox.closest('li');
  if( !li.classList.contains('selected') ) {
    li.classList.add('selected');
    checkedBox.disabled = true;
    checkedBox.checked = true;
  } else {
    li.classList.remove('selected');
    checkedBox.disabled = false;
    checkedBox.checked = false;
  }
  }

  function setErrorMsg( checkedBox ){
    const dropdownMenu = checkedBox.closest( '.dropdown' );
    const dropdownMenuBtn = dropdownMenu.querySelector( '.form-select' );
    dropdownMenuBtn.classList.add( 'disabled' );
    dropdownMenuBtn.setAttribute( 'disabled', 'disabled' );
    dropdownMenuBtn.setAttribute( 'aria-disabled', 'true' );
    dropdownMenu.classList.add( 'is-invalid' );
    const errorElem = document.createElement( 'p' );
    errorElem.className = 'invalid-feedback';  
    errorElem.textContent = 'Vous avez atteint le nombre maximum de choix';
    dropdownMenu.insertAdjacentElement( 'afterend', errorElem );
  }

  function resetErrorMsg( checkedBox ){
    const dropdownMenu = checkedBox.closest( '.dropdown' );
    const dropdownMenuBtn = dropdownMenu.querySelector( '.form-select' );
    dropdownMenuBtn.classList.remove( 'disabled' );
    dropdownMenuBtn.removeAttribute( 'disabled'  );
    dropdownMenuBtn.removeAttribute( 'aria-disabled'  );
    dropdownMenu.classList.remove( 'is-invalid' );
    const errorElem = checkedBox.closest('.multiselect').querySelector('.invalid-feedback' );
    errorElem.remove();
  }
});